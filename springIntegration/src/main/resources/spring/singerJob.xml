<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://xmlns.jcp.org/xml/ns/javaee
        http://xmlns.jcp.org/xml/ns/javaee/jobXml_1_0.xsd">

    <job id="singerJob" xmlns="http://xmlns.jcp.org/xml/ns/javaee" version="1.0">
        <step id="step1">
            <listeners>
                <listener ref="stepExecutionStatsListener"/>
            </listeners>
            <chunk item-count="10">
                <reader ref="itemReader"/>
                <processor ref="itemProcessor"/>
                <writer ref="itemWriter"/>
            </chunk>
            <fail on="FAILED"/>
            <end on="*"/>
        </step>
    </job>

    <jdbc:embedded-database id="dataSource" type="HSQL">
        <jdbc:script location="classpath:batch/singer.sql"/>
    </jdbc:embedded-database>

    <bean id="stepExecutionStatsListener" class="batch.StepExecutionStatsListener"/>
    <bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:batch/test-data.csv"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="fistName, lastName, song"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="batch.Singer"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="itemProcessor" class="batch.SingerItemProcessor"/>
    <bean id="itemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
        </property>
        <property name="sql" value="INSERT INTO singer (first_name, last_name, song) VALUES (:firtsName, :lastName, :song)"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.SimpleJobExplorer"/>
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.SimpleJobRepository"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>
</beans>